#!/usr/bin/env python
PACKAGE = "unav2_hardware"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Bridge
enable = gen.enum([ gen.const("Low",  bool_t, False, "Enable normally low"),
                    gen.const("High", bool_t, True, "Enable normally high")],
                    "Logic state")
gen.add("bridge_enable_polarity", bool_t, False, "Default logic value to enable the H bridge", False, edit_method=enable)
gen.add("bridge_disable_mode_outa", bool_t, False, "Logic value to bridge input A when bridge is disabled", False, edit_method=enable)
gen.add("bridge_disable_mode_outb", bool_t, False, "Logic value to bridge input B when bridge is disabled", False, edit_method=enable)
gen.add("pwm_dead_time",  int_t, 0, "[uS] Dead time PWM", 0, 0, 1000)
gen.add("pwm_frequency",     int_t,    0, "[kHz] frequency of execution PWM", 0, 1, 100)

gen.add("volt_offset", double_t, 0, "[V] Voltage sense offset", 1,  0, 100)
gen.add("volt_gain", double_t, 0, "[V/V] Voltage gain", 1,  0, 1000)

gen.add("current_offset", double_t, 0, "[A] Current sense offset in Ampere", 0,  0, 100)
gen.add("current_gain", double_t, 0, "[V/A] Current sense gain in Volt/Ampere", 1,  0, 1000)

exit(gen.generate(PACKAGE, "unav_node", "UnavBridge"))
