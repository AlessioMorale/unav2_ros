#!/usr/bin/env python
PACKAGE = "unav2_hardware"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("temp_warning",    double_t, 0, "[C\xc2] Temperature - Value of warning threshold",    60.0,  0, 100)
gen.add("temp_limit",   double_t, 0, "[C\xc2] Temperature - Value of critical threshold",   80.0,  0, 100)
gen.add("temp_timeout",       int_t, 0, "[ms] Temperature - Timeout to initiate safety stop of motors", 100, 1, 10000)
gen.add("temp_autorestore",   int_t, 0, "[ms] Temperature - Timeout for auto recovery mode. Disabled if zero", 0, 0, 10000)

gen.add("current_warning",    double_t, 0, "[A] Current - Value of warning threshold",    2,  0, 50)
gen.add("current_limit",   double_t, 0, "[A] Current - Value of critical threshold",   3,  0, 50)
gen.add("current_timeout",       int_t, 0, "[ms] Current - Timeout to initiate safety stop of motors",                  100, 1, 10000)
gen.add("current_autorestore",   int_t, 0, "[ms] Current - Timeout for auto recovery mode. Disabled if zero", 500, 0, 10000)

gen.add("position_limit",  double_t, 0, "[rad] IN MODULE - Maximum position limit",   6.28, 0, 6.28)
gen.add("velocity_limit",  double_t, 0, "[rad/s] IN MODULE - Maximum velocity limit", 20000, 0, 20000)
gen.add("pwm_limit",       int_t, 0, "[%] IN MODULE - Maximum PWM limit",          100, 0, 100)
gen.add("error_limit",     int_t, 0, "[%] Maximum control error limit",            100, 0, 100)


gen.add("slope_time",  int_t, 0, "[ms] Time to put velocity motor to zero",                   1000, 0, 30000)
gen.add("bridge_off",  int_t, 0, "[ms] Time to disable bridge, after the speed reaches zero", 1000, 0, 30000)
gen.add("timeout",     int_t, 0, "[ms] Timeout before an error condition triggers an emergency stop", 100,  0, 30000)

exit(gen.generate(PACKAGE, "unav_node", "UnavSafety"))
